<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="root_modDescription" xml:space="preserve">
    <value>Multiplica las posibilidades de skins de vehículos</value>
  </data>
  <data name="VS_MODELSELECT" xml:space="preserve">
    <value>Seleccionar modelo</value>
  </data>
  <data name="VS_THEREARENOSKINS" xml:space="preserve">
    <value>No hay skins cargados para este modelo de vehículo</value>
  </data>
  <data name="VS_CREATENEWSKIN" xml:space="preserve">
    <value>Crear nueva skin</value>
  </data>
  <data name="VS_CREATESKIN_MESSAGE" xml:space="preserve">
    <value>Escribe el nombre para la nueva skin:</value>
  </data>
  <data name="VS_CREATESKIN_ERROR_ALREADYEXISTS" xml:space="preserve">
    <value>&lt;color=yellow&gt;¡Ya hay una skin con este nombre!&lt;/color&gt;</value>
  </data>
  <data name="VS_RELOADALLSKINS" xml:space="preserve">
    <value>Recargar todos los skins</value>
  </data>
  <data name="VS_RELOADASSETSKINS" xml:space="preserve">
    <value>Recargar todos los skins del activo actual</value>
  </data>
  <data name="VS_ACTIVERULESONLY" xml:space="preserve">
    <value>Filtrar activos con al menos un skin</value>
  </data>
  <data name="VS_EXPORTTOASSET_TITLE" xml:space="preserve">
    <value>Exportar skins para compartir en la Workshop</value>
  </data>
  <data name="VS_EXPORTTOASSET_MSG" xml:space="preserve">
    <value>¿Desea borrar todos los skins ya exportados al taller?
Tenga en cuenta que los que tengan el mismo nombre serán sobrescritos de todos modos   </value>
  </data>
  <data name="VS_EXPORTASSET" xml:space="preserve">
    <value>Exportar a la Workshop</value>
  </data>
  <data name="VS_EXPORTTOASSET_MSGSUC" xml:space="preserve">
    <value>Los archivos fueron exportados con éxito!</value>
  </data>
  <data name="VS_VIEWFILES" xml:space="preserve">
    <value>Abrir carpeta de archivos</value>
  </data>
  <data name="VS_SOURCECOLOR_LEGEND" xml:space="preserve">
    <value>Leyenda de origen de la skin: &lt;color=gray&gt;skin original&lt;/color&gt; &lt;color=green&gt;Workshop/Staging&lt;/color&gt; &lt;color=yellow&gt;Carpeta Compartida&lt;/color&gt;</value>
  </data>
  <data name="VS_CREATESKIN_MSGSUC" xml:space="preserve">
    <value>¡Archivos de skins creados!
Ver archivos en la carpeta, editarlos y recargar el juego para ver los cambios   </value>
  </data>
  <data name="VS_USINGSAVEGAMECONFIG" xml:space="preserve">
    <value>Usando configuración de guardado</value>
  </data>
  <data name="VS_USINGSHAREDCONFIG" xml:space="preserve">
    <value>Usando configuración compartida</value>
  </data>
  <data name="VS_EXPORTASSHARED" xml:space="preserve">
    <value>Exportar actual a compartido</value>
  </data>
  <data name="VS_DISCARDSAVEGAME" xml:space="preserve">
    <value>Descartar y usar compartido</value>
  </data>
  <data name="VS_DEFAULTSNOTSAVED" xml:space="preserve">
    <value>&lt;color=red&gt;No se han guardado los skins habilitados por defecto!&lt;/color&gt;</value>
  </data>
  <data name="VS_DEFAULTSSAVED" xml:space="preserve">
    <value>Los skins habilitados por defecto están actualizados con el archivo</value>
  </data>
  <data name="VS_SAVESKINENABLESELECTION" xml:space="preserve">
    <value>Guardar skins habilitados por defecto</value>
  </data>
  <data name="VS_DISCARDCHANGES" xml:space="preserve">
    <value>Descartar cambios</value>
  </data>
  <data name="vs_forceSkinInCurrentSelectedVehicle" xml:space="preserve">
    <value>Forzar la skin del vehículo seleccionado</value>
  </data>
</root>